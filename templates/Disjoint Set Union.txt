// DISJOINT SET UNION TEMPLATE
class DSU {
    vector<int> parentVector;
    vector<int> sizeVector;

    DSU(int n) {
        vector<int> parentVector = vector<int>(100001);
        vector<int> sizeVector = vector<int>(100001);
    }

    void makeSet(int n) {
        parentVector[n] = n;
        sizeVector[n] = 1;
    }

    int findSet(int n) {
        if (n==parentVector[n]) return n;
        parentVector[n] = findSet(n);
        return parentVector[n];
    }

    void unionSet(int a, int b) {
        a = findSet(a);
        b = findSet(b);
        if (a!=b) {
            if (sizeVector[a]<sizeVector[b]) {
                a = a ^ b;
                b = a ^ b;
                a = a ^ b;
            }
            parentVector[b] = a;
            sizeVector[a] += sizeVector[b];
        }
    }
}